const express       = require("express");
const bodyParser    = require("body-parser");
const mongoose      = require("mongoose")
const passport      = require("passport");
const passportL     = require("passport-local");
const passportLM    = require("passport-local-mongoose");
const app           = express();

mongoose.connect('mongodb://localhost:27017/O-Donate', {useNewUrlParser: true});
app.use('/public', express.static("public"));
app.use(bodyParser.urlencoded({extended: true}));
app.set("view engine","ejs");

let cfundraiserSchema = new mongoose.Schema({
    cTopic: String,
    cDiscription: String,
    cTarget: Number,
    cImage: String
});

let cFundraiser = mongoose.model("cFundraiser", cfundraiserSchema);

// cFundraiser.create({
//         cTopic: "Biggest Sample Fundraiser",
//         cDiscription: "This is a biggest sample fundraiser.",
//         cTarget: 40000,
//         cImage: "https://images.unsplash.com/photo-1547496614-716134341006?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80"
//     }, function(error, truther){
//         if (error) console.log("Error!!!");
//         else {
//             console.log("Added!!!");
//             console.log(truther);
//         }
//     }
// );

app.post("/children",function (req,res){
    let c_topic = req.body.cTopic;
    let c_discription = req.body.cDiscription;
    let c_target = req.body.cTarget;
    let c_image = req.body.cImage;
    let c_donate = {cTopic:c_topic, cDiscription:c_discription, cTarget:c_target, cImage:c_image};
    
    cFundraiser.create(c_donate, function(error, newcDonate){
        if(error){
            console.log("error!!!");
        } else {
            console.log("Add!!!");
            res.redirect("/children");
        }
    })
});


app.get('/children',function (req,res){
    cFundraiser.find({}, function(error, allFundraiser){
        if (error) console.log("Error!!!");
        else res.render("children", {cFundraiser: allFundraiser});
    });
});

app.get('/children/:id',function (req,res){
    cFundraiser.findById(req.params.id, function (error, cDetails){
        if(error){
            console.log("error!!!");
        } else {
            res.render("cDetails",{child:cDetails});
        }
    })
});

let hfundraiserSchema = new mongoose.Schema({
    hTopic: String,
    hDiscription: String,
    hTarget: Number,
    hImage: String
});

let hFundraiser = mongoose.model("hFundraiser", hfundraiserSchema);


// hFundraiser.create({
//         hTopic: "Biggest Sample Fundraiser",
//         hDiscription: "This is a biggest sample fundraiser.",
//         hTarget: 40000,
//         hImage: "https://images.unsplash.com/photo-1547496614-716134341006?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80"
//     }, function(error, truther){
//         if (error) console.log("Error!!!");
//         else {
//             console.log("Added!!!");
//             console.log(truther);
//         }
//     }
// );

app.post("/hospital",function (req,res){
    let h_topic = req.body.hTopic;
    let h_discription = req.body.hDiscription;
    let h_target = req.body.hTarget;
    let h_image = req.body.hImage;
    let h_donate = {hTopic:h_topic, hDiscription:h_discription, hTarget:h_target, hImage:h_image};
    
    hFundraiser.create(h_donate, function(error, newhDonate){
        if(error){
            console.log("error!!!");
        } else {
            console.log("Add!!!");
            res.redirect("/hospital");
        }
    })
});

app.get('/hospital',function (req,res){
    hFundraiser.find({}, function(error, allFundraiser){
        if (error) console.log("Error!!!");
        else res.render("hospital", {hFundraiser: allFundraiser});
    });
});

app.get('/hospital/:id',function (req,res){
    hFundraiser.findById(req.params.id, function (error, hDetails){
        if(error){
            console.log("error!!!");
        } else {
            res.render("hDetails",{hospital:hDetails});
        }
    })
});

app.get('/',function (req,res){
    res.render("index");
});

app.get('/register',function (req,res){
    res.render("register");
});

app.get('/signin',function (req,res){
    res.render("signin");
});

app.listen(1412,function(){
    console.log('Example app listening on port 1412!');
});